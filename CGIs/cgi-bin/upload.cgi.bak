#!/usr/bin/perl -wT

use strict;
use warnings;
use CGI;
use CGI::Carp qw(fatalsToBrowser);
use DBI;
use File::Basename;

$CGI::POST_MAX = 1024*5000;

print qq(Content-type: text/html\n\n);

my $query = CGI->new();
my $upload_dir = "/var/www/html/upload";
my $safe_filename_characters = "a-zA-Z0-9_.-"; 
my $filename = $query->param("file");
print "$filename\n";
#my @filename = $query->param();


#print $query->header(),
#	$query->start_html("Feedback"),
#	foreach my $Feld (@filename){
#		print $query->strong("Feldname: "),
#			$Feld,
#			$query->strong(", INHALT: "),
#			$query->param("Feld"),'<br>'
#	}

#print $query->end_html();

print $filename."\n";
print $query->param()."\n";

if(!$filename){
	print $query->header();
	print "Deine Datei k&ouml;nnte zu gross sein (versuch bitte ein kleineres hochzuladen)";
	print $filename;
	exit;
}

my ($name,$path,$extension) = fileparse($filename,'\..*');
$filename = $name.$extension;

$filename =~ tr/ /_/; #convert spaces in underscores
$filename =~ s/[^$safe_filename_characters]//g; #regular expression , here we taint the file

#we will untaint the tainted variable by using the regular expression

if($filename =~ /^([$safe_filename_characters]+)$/){
	$filename = $1;
}else{
	die "Filename contains invalid characters";
}

print $filename;

my $upload_filehandle = $query->upload("file_upload");

print $upload_filehandle;

open(UPLOADFILE,">$upload_dir/$filename") or die "$!";

my $nBytes = 0;
my $totBytes = 0;
my $buffer = "";

binmode UPLOADFILE;

while($nBytes = read($filename, $buffer, 1024)){
#print UPLOADFILE "My first report generated by perl\n";
	print UPLOADFILE $buffer;
}

close UPLOADFILE;

print $query->header();
print '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">';
print '<html>';
print '<head>';
print '<meta http-equiv="Content-Type" content="text/html; charset="utf-8" />';
print '<title>Thank you</title>';
print '</head>';
print '<body>'.$filename.'</body>';
print '</html>';
